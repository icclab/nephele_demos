{
  mode: "client",
  connect:{ 
  timeout_ms: -1,
  exit_on_failure: false,
  endpoints: ["tcp/160.85.253.140:30447"] 
  },
  timestamping: {
    /// Whether data messages should be timestamped if not already.
    /// Accepts a single boolean value or different values for router, peer and client.
    enabled: true,
    /// Whether data messages with timestamps in the future should be dropped or not.
    /// If set to false (default), messages with timestamps in the future are retimestamped.
    /// Timestamps are ignored if timestamping is disabled.
    drop_future_timestamp: false,
  },
  plugins: {
    ros2dds: {
      namespace: "/summit",
   //   ros_localhost_only: false,
    //  deny: {
    //   publishers: ["/drone/.*", "/summit/.*"],
    //   subscribers: ["/drone/.*", "/summit/.*"],
    //   service_servers: ["/drone/.*", "/summit/.*"],
    //   service_clients: ["/drone/.*", "/summit/.*"],
     //  action_servers: ["/drone/.*", "/summit/.*"],
     //  action_clients: ["/drone/.*", "/summit/.*"],

      //  publishers: [".*/rosout", ".*/.*parameter.*",
         //  ".*/_internal/.*"],
      //  subscribers: [".*/rosout", ".*/.*parameter.*",
         //  ".*/_internal/.*"],
      //  service_servers: [".*/.*parameter.*", ".*/_internal/.*"],
      //  service_clients: [".*/.*parameter.*", ".*/_internal/.*"],
      //  action_servers: [".*/_internal/.*"],
      //  action_clients: [".*/_internal/.*"],
     // },
      allow: {
       publishers: ["/summit/.*"],
       subscribers: ["/summit/.*"],
       service_servers: ["/summit/.*"],
       service_clients: ["/summit/.*"],
       action_servers: ["/summit/.*"],
       action_clients: ["/summit/.*"],
      },
   //   pub_max_frequencies: [
   //     ".*/image_raw=5",
   //     ".*/camera_info=5",
   //     ".*/scan=10",
   //     ".*/imu=50",
   //   ],

      //// queries_timeout: Timeouts configuration for various Zenoh queries.
      ////                  Each field is optional. If not set, the 'default' timeout (5.0 seconds by default) applies to all queries.
      ////                  Each value can be either a float in seconds that will apply as a timeout to all queries,
      ////                  either a list of strings with format "<regex>=<float>" where:
      ////                      - "regex" is a regular expression matching an interface name
      ////                      - "float" is the timeout in seconds
       queries_timeout: {
      //   //// default timeout that will apply to all query, except the ones specified below
      //   //// in 'transient_local_subscribers', 'services' and 'actions'
         default: 3600.0,
      //   //// timeouts for TRANSIENT_LOCAL subscriber when querying publishers for historical publications
         transient_local_subscribers: 3600.0,
      //   //// timeouts for Service clients calling a Service server
      //   services: ["add_two_ints=0.5", ".*=1.0"],
      //   //// timeouts for Action clients calling an Action server (send_goal, cancel_goal and get_result services)
         actions: {
           send_goal: 3600.0,
           cancel_goal: 3600.0,
           get_result: [".*=3600"],
         }
       }
    },
  //  rest: { http_port: 8000 }
  }
}
