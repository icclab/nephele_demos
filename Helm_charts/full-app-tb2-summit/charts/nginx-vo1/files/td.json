{
    "title": "vo1",
    "id": "urn:dev:wot:vo1",
    "description": "Descriptor for vo1 for tb2.",
    "securityDefinitions": {
        "nosec_sc": {
            "scheme": "nosec"
        }
    },
    "security": "nosec_sc",
    "@context": [
        "https://www.w3.org/2022/wot/td/v1.1"
    ],
    "properties": { 
        "allAvailableResources_tb2": {  
            "type": "object", 
            "description": "Current level of all available resources given as an integer percentage for each particular resource. The data is obtained from the machine's sensors but can be set manually in case the sensors are broken.", 
            "properties": { 
                "battery_percent": { 
                    "type": "integer", 
                    "minimum": 0, 
                    "maximum": 100 
                }
           	} 
        }, 
        "possibleLaunchfiles_tb2": { 
            "type": "array", 
            "description": "The list of possible launchfiles. Doesn't depend on the available resources.", 
            "items": { 
                "type": "string" 
            } 
        }
    },
    "actions": { 
        "triggerBringup_tb2": { 
            "title": "Trigger ROS launchfiles", 
            "description": "Brings hw components up (corresponding ROS launch files are launched). Accepts launchfile id as input. Brings up all if no input is specified.", 
            "input": { 
                "type": "object", 
                "properties": { 
                    "launchfileId": { 
                        "type": "string", 
                        "description": "Defines what HW to bring up, launchfileId is one of possibleLaunchfiles property values, e.g., bringup_complete" 
                    }
                }
            },
            "output": { 
                "type": "object", 
                "description": "Returns True/false and a message when all invoked promises are resolved (asynchronous).", 
                "properties": { 
                    "result": { 
                        "type": "boolean" 
                    }, 
                    "message": { 
                        "type": "string" 
                    } 
                } 
            } 
        },
        "myRosbagAction_tb2": { 
            "title": "Start/stop rosbag saver ", 
            "description": "STore rosbag on local FS", 
            "output": { 
                "type": "object", 
                "properties": { 
                    "result": { 
                        "type": "boolean" 
                    }, 
                    "message": { 
                        "type": "string" 
                    } 
                } 
            } 
        },
        "mapExport_tb2": { 
            "title": "Export map data", 
            "description": "Get map data", 
            "output": { 
                "type": "object", 
                "description": "Returns map in string format.", 
                "properties": { 
                    "maptoString": { 
                        "type": "string" 
                    }
                } 
            } 
        },
        "mapStoreDB_tb2": { 
            "title": "Store map on DB", 
            "description": "Get map data and store it to DB of the VO", 
            "input": { 
                "type": "object", 
                "properties": { 
                    "filename_tosave_tb2": { 
                        "type": "string", 
                        "description": "which filename to save map in db" 
                    }
                }
            },
            "output": { 
                "type": "object", 
                "description": "Returns map in string format.", 
                "properties": { 
                    "result": { 
                        "type": "boolean" 
                    }, 
                    "message": { 
                        "type": "string" 
                    } 
                } 
            } 
        },
        "mapReadDB_tb2": { 
            "title": "Read map from DB", 
            "description": "Get map from DB of the VO", 
            "input": { 
                "type": "object", 
                "properties": { 
                    "filename_map_tb2": { 
                        "type": "string", 
                        "description": "which filename to get from db" 
                    }
                }
            },
            "output": { 
                "type": "object", 
                "description": "Returns map in string format from DB on VO.", 
                "properties": { 
                    "maptoString": { 
                        "type": "string" 
                    }
                }
            } 
        },
        "filenamesReadDB_tb2": { 
            "title": "Read map from DB", 
            "description": "Get map from DB of the VO", 
            "output": { 
                "type": "object", 
                "description": "Returns map in string format from DB on VO.", 
                "properties": { 
                    "filenames_db_tb2": { 
                        "type": "string", 
                        "description": "which filename to get from db" 
                    }
                }
            } 
        },
        "currentValues_tb2": {
            "description": "Returns current Values for battery status from tb2 through the Consumed Thing"
        }
    }, 
    "events": { 
        "outOfResource_tb2": { 
            "description": "Out of resource event. Emitted when the available resource level is not sufficient to operate further (e.g., battery level).", 
            "data": { 
                "type": "string" 
            } 
        } 
    } 
} 

